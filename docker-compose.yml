version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - FRONTEND_URL=http://localhost:4200
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    depends_on:
      - dynamodb-local
    volumes:
      - ./backend/src:/app/src:ro
    networks:
      - asap-cv-network
    restart: unless-stopped

  # DynamoDB Local for development
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: asap-cv-dynamodb-local
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - asap-cv-network
    restart: unless-stopped

  # DynamoDB Admin UI (optional)
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: asap-cv-dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    depends_on:
      - dynamodb-local
    networks:
      - asap-cv-network
    restart: unless-stopped

  # Frontend (Angular) - for local development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:3000/api
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/angular.json:/app/angular.json:ro
      - ./frontend/package.json:/app/package.json:ro
    networks:
      - asap-cv-network
    restart: unless-stopped

volumes:
  dynamodb-data:
    driver: local

networks:
  asap-cv-network:
    driver: bridge